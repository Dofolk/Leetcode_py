# 這題是給一個數字，然後造去找最少多少步的 //2 可以讓數字除成 1，要注意的是如果目前數字為偶數則強制 //2，奇數的話則可以選擇 +1 或 -1 來變成偶數並當成一步
# 做法就是用貪婪演算法的想法來做，所以遇到偶數就不用說直接除，然後可以知道如果是 4 的倍數時可以只用兩步可以降低很多，所以遇到 4k+1 的時候就選擇把數字 -1
# 另外遇到 3 的時候也是 -1，因為 2 只要做一次但是 4 要做兩次，剩下的狀況就是直接做 +1 的就可以了

class Solution:
    def integerReplacement(self, n: int, counter = 0) -> int:
        s = 0
        while n > 1:
            s += 1
            if n % 2 == 0:
                n //= 2
            elif n % 4 == 1 or n == 3:
                n -= 1
            else:
                n += 1
        return s
